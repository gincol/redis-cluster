apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: redis-cluster
  name: redis-cluster
  namespace: redis
spec:
  podManagementPolicy: Parallel
  replicas: 6
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-cluster
  serviceName: redis-cluster-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-cluster
    spec:
      affinity: {}
      containers:
      - args:
        - |
          # Backwards compatibility change
          if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
              echo COPYING FILE
              cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
          fi
          /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
        command:
        - /bin/bash
        - -c
        env:
        - name: REDIS_NODES
          value: 'redis-cluster-0.redis-cluster-headless redis-cluster-1.redis-cluster-headless
            redis-cluster-2.redis-cluster-headless redis-cluster-3.redis-cluster-headless
            redis-cluster-4.redis-cluster-headless redis-cluster-5.redis-cluster-headless '
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: REDIS_AOF_ENABLED
          value: "yes"
        - name: REDIS_TLS_ENABLED
          value: "no"
        - name: REDIS_PORT
          value: "6379"
        image: docker.io/bitnami/redis-cluster:6.0.9-debian-10-r13
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - /scripts/ping_liveness_local.sh 5
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: redis-cluster
        ports:
        - containerPort: 6379
          name: tcp-redis
          protocol: TCP
        - containerPort: 16379
          name: tcp-redis-bus
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - /scripts/ping_readiness_local.sh 1
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /scripts
          name: scripts
        - mountPath: /bitnami/redis/data
          name: redis-data
        - mountPath: /opt/bitnami/redis/etc/redis-default.conf
          name: default-config
          subPath: redis-default.conf
        - mountPath: /opt/bitnami/redis/etc/
          name: redis-tmp-conf
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 493
          name: redis-cluster-scripts
        name: scripts
      - configMap:
          defaultMode: 420
          name: redis-cluster-default
        name: default-config
      - emptyDir: {}
        name: redis-tmp-conf
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
      storageClassName: managed-nfs-storage
